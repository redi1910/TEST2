plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.netflix.dgs.codegen' version '5.1.2'
	id "org.sonarqube" version "3.4.0.2513"
}


group = 'com.msc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter:5.0.3'

	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly "org.mapstruct:mapstruct:1.4.2.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

generateJava {
	packageName = "com.msc.B2Cconfig.generated.graphql"
	generateClient = true
	language = "java"
}

sonarqube {
	properties {
		property "sonar.projectKey", "MSC-venture_msc-dmp"
		property "sonar.organization", "msc-venture"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
